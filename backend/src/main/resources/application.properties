spring.application.name=backend de RedRosters, API REST con conexion a PostgreSQL

server.port=${BACK_PORT}

# Conexion a base de datos
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${POSTGRES_DB}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}

jwt.secret=${JWT_SECRET}

# Datos del admin
admin.username=${ADMIN_USERNAME}
admin.email=${ADMIN_EMAIL}
admin.password=${ADMIN_PASSWORD}

# En produccion, se cambia a 'update' para actualizar las tablas sin borrar nada.
# Create lo crea desde 0 borrando lo anterior.
spring.jpa.hibernate.ddl-auto=create

# Ver logs base de datos
spring.jpa.show-sql=true
